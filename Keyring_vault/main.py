import keyring, os
from util import main as register_user
import requests

'''
####Goal of this module####
The goal of this module is to supply the credential to a HTTP request that is not hard coded but from a secure container (Mac OS Keychain). The credential is fetched in the vault based on the URL/username. The Mac OS Keychain then returns the password that can be used in the variable. 

- The credentials is stored securely at Mac OS keychain container. 
https://support.apple.com/en-gb/guide/mac-help/mchlf375f392/mac

- Keyring
The Python keyring library provides an easy way to access the system keyring service from python. It can be used in any application that needs safe password storage
https://pypi.org/project/keyring/

- Tests can be executed against the url: https://httpbin.org/post which returns the credential
'''


#Global variables
start = True


#Improvement Version2
#Log source
# source_folder = '/Users/l.chagas/git/source_folder'
# txt_folder = '/Users/l.chagas/git/txt_folder'
# log_folder = '/Users/l.chagas/git/log_folder'


# def sort_files():
# # Pull data from different log sources
# # 1 - Pull logs fom different folders
# # 2 - Move the logs based on the type of the file .txt, .log

#     os.chdir(source_folder)
#     #current_folder = os.getcwd()
#     source_files_list = os.listdir() #list files and dirs

#     for filename in source_files_list:
#         if filename.endswith('.txt'):
#             print(filename)

#         elif filename.endswith('.log'):
#             print('It was executed')
#             print(filename)


def http_request(url, user, password):
    '''Make the request to the URL using credentials from Mac keychain'''

    payload = {'username': user , 'password':password}

    r = requests.post(url, data=payload)
    # r_dict = r.json()
    # print(r_dict['form']['password'])
    print(r.text)

# http_request('https://httpbin.org/post')


def login(url, user):
    '''Get password from mac Keychain'''

    password = keyring.get_password(url, user)
    if password == None:
        return False

    else:
        http_request(url, user, password)
        

#MAIN CODE
def main():
    while start:

        url = input('Enter the URL you would like to access\n')
        user = input('Enter the username\n')

        test_login = login(url, user)

        if test_login == False:
            print('url or username does not exist or its wrong\n')
            user_q = input('Would you like to register the credential? y/n\n').lower()
            if user_q == 'n':
                break

            else:
                register_user()
                break

main()





        




